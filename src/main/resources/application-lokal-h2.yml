spring:
  config.activate.on-profile: lokal-h2, lokal-postgres
  cloud.gcp:
    secretmanager.enabled: false
    sql.enabled: false
    sql.database-name: reisekostnad
  main.allow-bean-definition-overriding: true
  datasource.type: com.zaxxer.hikari.HikariDataSource

---
spring:
  config.activate.on-profile: (lokal-h2 | lokal-postgres) & !lokal-sky
wiremock.server:
  port: 0
  stubs: "file:src/test/java/resources/mappings"

AZURE_APP_TENANT_ID: tokenx
AZURE_OPENID_CONFIG_TOKEN_ENDPOINT: http://localhost:${mock-oauth2-server.port}/${AZURE_APP_TENANT_ID}

no.nav.security.jwt:
  client.registration:
    bidrag-person:
      token-endpoint-url: ${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT}
      grant-type: client_credentials
      authentication:
        client-id: ${AZURE_APP_CLIENT_ID}
        client-secret: ${AZURE_APP_CLIENT_SECRET}
        client-auth-method: client_secret_basic
  expirythreshold: 1
  issuer:
    tokenx:
      discoveryurl: ${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT}/.well-known/openid-configuration
      accepted_audience: aud-localhost
      cookie_name: localhost-idtoken

integrasjon.bidrag.person.url: ${BIDRAG_PERSON_URL}
KJOEREPLAN_ARKIVERING: "0 0 7 * * ?"

#### Mocks
WIREMOCK_URL: http://localhost:${wiremock.server.port}
integrasjon.bidrag:
  dokument.url: ${WIREMOCK_URL}
  person.url: ${WIREMOCK_URL}

### brukernotifkasjoner
KAFKA_BROKERS: 127.0.0.1:9092
KAFKA_SCHEMA_REGISTRY: http://localhost:8081
KAFKA_TRUSTSTORE_PATH: src/test/java/resources/cert/server-selfsigned.jks
KAFKA_CREDSTORE_PASSWORD: qwer1234
KAFKA_SCHEMA_REGISTRY_USER: user
KAFKA_SCHEMA_REGISTRY_PASSWORD: secret
KAFKA_KEYSTORE_PATH: src/test/java/resources/cert/server-selfsigned.jks
spring.kafka.bootstrap-servers: localhost:9092
spring.kafka.consumer.group-id: reisekostnad
spring.kafka.consumer.auto-offset-reset: earliest
BIDRAG_REISEKOSTNAD_UI_URL: https://bidrag-reisekostnad.dev.nav.no
egenskaper.brukernotifikasjon.skruddPaa: false

---
spring:
  config.activate.on-profile: lokal-h2
  ### H2 ###
  flyway.enabled: false
  datasource.url: jdbc:h2:mem:default
  spring.datasource.initialization-mode: always
  data.jpa.repositories.bootstrap-mode: default
  h2.console.enabled: true
  jpa.hibernate.ddl-auto: create-drop
  jpa.database-platform: org.hibernate.dialect.H2Dialect

---

### POSTGRES ###
spring:
  config.activate.on-profile: lokal-postgres
  # Oppsett for flyway med hikari og postgres
  datasource:
    url: jdbc:postgresql://localhost:5432/reisekostnad
    databaseName: reisekostnad
    portNumber: 5432
    serverName: localhost
    hikari:
      idle-timeout: 10001
      max-lifetime: 30001
      connectionTimeout: 1000
      maximum-pool-size: 10
      minimum-idle: 1
  flyway:
    enabled: true
    flyway.locations: classpath:/db/migration
  jpa:
    hibernate.connection.provider_class: org.hibernate.hikaricp.internal.HikariCPConnectionProvider
    properties:
      hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect

