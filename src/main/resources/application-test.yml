AZURE_APP_TENANT_ID: tokenx
TOKEN_X_CLIENT_ID: tokenx
AZURE_OPENID_CONFIG_TOKEN_ENDPOINT: http://localhost:${mock-oauth2-server.port}/${AZURE_APP_TENANT_ID}
TOKEN_X_WELL_KNOWN_URL: http://localhost:${mock-oauth2-server.port}/tokenx/.well-known/openid-configuration

no.nav.security.jwt:
  client.registration:
    bidrag-person:
      token-endpoint-url: ${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT}
      grant-type: client_credentials
      authentication:
        client-id: ${AZURE_APP_CLIENT_ID}
        client-secret: ${AZURE_APP_CLIENT_SECRET}
        client-auth-method: client_secret_basic
    bidrag-person_tokenx:
      token-endpoint-url: ${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT}
      grant-type: client_credentials
      authentication:
        client-id: x
        client-secret: x
        client-auth-method: client_secret_basic
  expirythreshold: 1
  issuer:
    tokenx:
      discoveryurl: ${TOKEN_X_WELL_KNOWN_URL}
      accepted_audience: aud-localhost
      cookie_name: localhost-idtoken

spring:
  cloud.gcp:
    secretmanager.enabled: false
    sql.enabled: false
  main.allow-bean-definition-overriding: true
  ### H2 ###
  flyway.enabled: false
  datasource.type: com.zaxxer.hikari.HikariDataSource
  datasource.url: jdbc:h2:mem:default
  spring.datasource.initialization-mode: always
  data.jpa.repositories.bootstrap-mode: default
  h2.console.enabled: true
  jpa:
    hibernate.ddl-auto: create-drop
    database-platform: org.hibernate.dialect.H2Dialect
    properties:
      hibernate.dialect: org.hibernate.dialect.H2Dialect

#### Mocks
WIREMOCK_URL: http://localhost:${wiremock.server.port}
BIDRAG_PERSON_URL: ${WIREMOCK_URL}
